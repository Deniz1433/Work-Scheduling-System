databaseChangeLog:
  - changeSet:
      id: 001-create-all-tables
      author: app
      changes:

        # === USERS ===
        - createTable:
            tableName: users
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: keycloak_id, type: varchar(255), constraints: { unique: true, nullable: false } }
              - column: { name: username, type: varchar(100), constraints: { unique: true, nullable: false } }
              - column: { name: email, type: varchar(150), constraints: { unique: true, nullable: false } }
              - column: { name: name, type: varchar(150) }
              - column: { name: surname, type: varchar(150) }
              - column: { name: is_active, type: boolean }
              - column: { name: created_at, type: timestamp }
              - column: { name: updated_at, type: timestamp }
              - column: { name: password, type: varchar(255), constraints: { nullable: true } }

        # === ROLES ===
        - createTable:
            tableName: roles
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: name, type: varchar(100), constraints: { unique: true, nullable: false } }
              - column: { name: description, type: varchar(255) }

        # === PERMISSIONS ===
        - createTable:
            tableName: permissions
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: action, type: varchar(100), constraints: { unique: true, nullable: false } }
              - column: { name: description, type: varchar(255) }

        # === ROLE_PERMISSIONS ===
        - createTable:
            tableName: role_permissions
            columns:
              - column: { name: role_id, type: uuid, constraints: { nullable: false } }
              - column: { name: permission_id, type: uuid, constraints: { nullable: false } }
        - addPrimaryKey:
            tableName: role_permissions
            columnNames: role_id, permission_id
            constraintName: pk_role_permissions
        - addForeignKeyConstraint:
            baseTableName: role_permissions
            baseColumnNames: role_id
            referencedTableName: roles
            referencedColumnNames: id
            constraintName: fk_role_permissions_role
        - addForeignKeyConstraint:
            baseTableName: role_permissions
            baseColumnNames: permission_id
            referencedTableName: permissions
            referencedColumnNames: id
            constraintName: fk_role_permissions_permission

        # === USER_ROLES ===
        - createTable:
            tableName: user_roles
            columns:
              - column: { name: user_id, type: uuid, constraints: { nullable: false } }
              - column: { name: role_id, type: uuid, constraints: { nullable: false } }
        - addPrimaryKey:
            tableName: user_roles
            columnNames: user_id, role_id
            constraintName: pk_user_roles
        - addForeignKeyConstraint:
            baseTableName: user_roles
            baseColumnNames: user_id
            referencedTableName: users
            referencedColumnNames: id
            constraintName: fk_user_roles_user
        - addForeignKeyConstraint:
            baseTableName: user_roles
            baseColumnNames: role_id
            referencedTableName: roles
            referencedColumnNames: id
            constraintName: fk_user_roles_role

        # === DEPARTMENTS ===
        - createTable:
            tableName: departments
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: name, type: varchar(100), constraints: { unique: true, nullable: false } }
              - column: { name: category, type: varchar(100) }
              - column: { name: min_office_days, type: int }
              - column: { name: created_at, type: timestamp }
              - column: { name: updated_at, type: timestamp }

        # === USER_DEPARTMENTS ===
        - createTable:
            tableName: user_departments
            columns:
              - column: { name: user_id, type: uuid, constraints: { nullable: false } }
              - column: { name: department_id, type: uuid, constraints: { nullable: false } }
        - addPrimaryKey:
            tableName: user_departments
            columnNames: user_id, department_id
            constraintName: pk_user_departments
        - addForeignKeyConstraint:
            baseTableName: user_departments
            baseColumnNames: user_id
            referencedTableName: users
            referencedColumnNames: id
            constraintName: fk_user_departments_user
        - addForeignKeyConstraint:
            baseTableName: user_departments
            baseColumnNames: department_id
            referencedTableName: departments
            referencedColumnNames: id
            constraintName: fk_user_departments_department

        # === ATTENDANCE_WEEKS ===
        - createTable:
            tableName: attendance_weeks
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: start_date, type: date, constraints: { nullable: false } }
              - column: { name: end_date, type: date, constraints: { nullable: false } }
              - column: { name: created_at, type: timestamp }
        - addUniqueConstraint:
            tableName: attendance_weeks
            columnNames: start_date, end_date
            constraintName: uq_attendance_weeks_start_end

        # === ATTENDANCE_ENTRIES ===
        - createTable:
            tableName: attendance_entries
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: user_id, type: uuid, constraints: { nullable: false } }
              - column: { name: week_id, type: uuid, constraints: { nullable: false } }
              - column: { name: submitted_at, type: timestamp }
              - column: { name: approved_at, type: timestamp }
              - column: { name: approved_by, type: uuid }
              - column: { name: status, type: varchar(20) }
              - column: { name: comment, type: text }
        - addUniqueConstraint:
            tableName: attendance_entries
            columnNames: user_id, week_id
            constraintName: uq_attendance_entries_user_week
        - addForeignKeyConstraint:
            baseTableName: attendance_entries
            baseColumnNames: user_id
            referencedTableName: users
            referencedColumnNames: id
            constraintName: fk_attendance_entries_user
        - addForeignKeyConstraint:
            baseTableName: attendance_entries
            baseColumnNames: week_id
            referencedTableName: attendance_weeks
            referencedColumnNames: id
            constraintName: fk_attendance_entries_week
        - addForeignKeyConstraint:
            baseTableName: attendance_entries
            baseColumnNames: approved_by
            referencedTableName: users
            referencedColumnNames: id
            constraintName: fk_attendance_entries_approver

        # === EXCUSES ===
        - createTable:
            tableName: excuses
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: user_id, type: uuid, constraints: { nullable: false } }
              - column: { name: reason, type: varchar(100) }
              - column: { name: description, type: text }
              - column: { name: start_date, type: date }
              - column: { name: end_date, type: date }
              - column: { name: approved_by, type: uuid }
              - column: { name: approved_at, type: timestamp }
              - column: { name: status, type: varchar(20) }
              - column: { name: created_at, type: timestamp }
        - addForeignKeyConstraint:
            baseTableName: excuses
            baseColumnNames: user_id
            referencedTableName: users
            referencedColumnNames: id
            constraintName: fk_excuses_user
        - addForeignKeyConstraint:
            baseTableName: excuses
            baseColumnNames: approved_by
            referencedTableName: users
            referencedColumnNames: id
            constraintName: fk_excuses_approver

        # === ATTENDANCE_DAYS ===
        - createTable:
            tableName: attendance_days
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: attendance_entry_id, type: uuid, constraints: { nullable: false } }
              - column: { name: day_of_week, type: varchar(10) }
              - column: { name: status, type: varchar(20) } # ENUM: office, online, leave, holiday
              - column: { name: excuse_id, type: uuid }
        - addForeignKeyConstraint:
            baseTableName: attendance_days
            baseColumnNames: attendance_entry_id
            referencedTableName: attendance_entries
            referencedColumnNames: id
            constraintName: fk_attendance_days_entry
        - addForeignKeyConstraint:
            baseTableName: attendance_days
            baseColumnNames: excuse_id
            referencedTableName: excuses
            referencedColumnNames: id
            constraintName: fk_attendance_days_excuse

        # === HOLIDAYS ===
        - createTable:
            tableName: holidays
            columns:
              - column: { name: id, type: uuid, constraints: { primaryKey: true, nullable: false } }
              - column: { name: name, type: varchar(100) }
              - column: { name: date, type: date, constraints: { unique: true, nullable: false } }
              - column: { name: is_recurring, type: boolean }
              - column: { name: description, type: text }
              - column: { name: created_at, type: timestamp }